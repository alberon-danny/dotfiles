#!/usr/bin/env php
<?php

/**
 * Todo:
 *  support for json config (i.e. danny sites)
 *  support for WordPress
 *  support for Drupal
 *  support for specifying a config file? (i.e. point to .env, it chooses .env, point to wp-config, it chooses wp-config)
 */
use Danny\Scripts\DataTransfer\Exporter;
use Danny\Scripts\DataTransfer\Importer;
use Dotenv\Dotenv;
use DPress\Abstraction\DataLayer\DataLayer;
use DPress\Abstraction\DataLayer\DataMapping\DataMapper;
use DPress\Abstraction\DataLayer\Schema\SchemaManager;
use DPress\Abstraction\DataLayer\SQL\SQLBuilder;
use DPress\Abstraction\Dependencies\DefaultDependencyManager;
use DPress\Abstraction\Dependencies\DependencyInjector;
use DPress\Abstraction\Dependencies\Models\DependencyFactoryModel;
use DPress\Generic\DataLayer\Databases\Generic\GenericDatabase;

$vendorPath = __DIR__;
while(!file_exists($vendorPath.DIRECTORY_SEPARATOR.'vendor') && strlen($vendorPath) > 1) {
	$vendorPath = dirname($vendorPath);
}
if (!file_exists($vendorPath.DIRECTORY_SEPARATOR.'vendor')) {
    echo "Unable to locate vendor directory\n";
    exit;
}

require $vendorPath.DIRECTORY_SEPARATOR.'vendor'.DIRECTORY_SEPARATOR.'autoload.php';

$options = getopt('', array(
    'source:',
    'target:',
    'file:',
));

if (!isset($options['source']) && !isset($options['target'])) {
    echo "Must specify --source (for export) or --target (for import)\n";
    exit;
}

if (!isset($options['file'])) {
    echo "Must specify data file for import/export (--file)\n";
    exit;
}

function findFileUpwards($file) {
    $dir = getcwd();
    while(!file_exists($file) && strlen(getcwd()) > 1) {
        chdir("..");
    }

    if (file_exists($file))
        $ret = getcwd().DIRECTORY_SEPARATOR.$file;
    else
        $ret = null;

    chdir($dir);
    return $ret;
}

function databaseFactory($config_type) {
    switch(strtolower($config_type)) {
        case 'wordpress':
            echo "Not implemented\n";
            exit;
            break;
        case 'dpress':
	        echo "Not implemented\n";
	        exit;
            break;
        case 'env':
            $file = findFileUpwards(".env");
            $dotEnv = new Dotenv(dirname($file));
	        $dotEnv->load();
	        $dotEnv->required(['DB_HOST', 'DB_DATABASE', 'DB_USERNAME', 'DB_PASSWORD']);
            return GenericDatabase::MySQL($_ENV['DB_HOST'], $_ENV['DB_USERNAME'], $_ENV['DB_PASSWORD'], $_ENV['DB_DATABASE'], '');
            break;
    }

    echo "Unable to locate database config\n";
    exit;
}

function bootstrap($options) {
	$database = databaseFactory(isset($options['source']) ? $options['source'] : $options['target']);
	$dependencies = new DependencyInjector(new DefaultDependencyManager(
		array(
            new DependencyFactoryModel('DPress\\Abstraction\\DataLayer\\Databases\\Database', 'DPress\\Abstraction\\DataLayer\\Databases\\Database', array(), true),
            new DependencyFactoryModel('DPress\\Abstraction\\DataLayer\\DataLayer', 'DPress\\Abstraction\\DataLayer\\DataLayer', array(), true),
            new DependencyFactoryModel('DPress\\Abstraction\\Events\\EventManager', 'DPress\\Abstraction\\Events\\DefaultEventManager', array(), true),
            new DependencyFactoryModel('DPress\\Abstraction\\Routing\\Router', 'DPress\\Generic\\Routing\\GenericRouter', array(), true),
            new DependencyFactoryModel('DPress\\Abstraction\\UI\\TemplateRenderer', 'DPress\\Generic\\UI\\GenericTemplateRenderer', array(), true),
            new DependencyFactoryModel('DPress\\Abstraction\\UI\\AssetManager', 'DPress\\Generic\\UI\\DefaultAssetManager', array("", ""), true),
        ),
		array(
			'DPress\\Abstraction\\DataLayer\\Databases\\Database' => $database,
		)
	));
	DPressBootstrap::Instance()->bootstrap($dependencies);
}


bootstrap($options);
$database = DPress()->datalayer()->database();

if (isset($options['source'])) {
    $handle = fopen($options['file'], 'w');
    $exporter = new Exporter($database, $handle);
    $exporter->export();
    fclose($handle);
    // export
    // source is one of: dpress, env, wordpress
} elseif(isset($options['target'])) {
    $handle = fopen($options['file'], 'r');
    $importer = new Importer($database, $handle);
    $importer->import();
    fclose($handle);
    // import
	// target is one of: dpress, env, wordpress
}

// export structure & data
// alternatively import structure & data